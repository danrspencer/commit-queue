#!/usr/bin/env bash

set -e

MAIN_BRANCH="master"

CURRENT_BRANCH=`git branch | grep \* | awk '{print $2}'`

if [[ ${MAIN_BRANCH} != ${CURRENT_BRANCH} ]]
then
    echo
    echo -e "\033[1;31mYou are attempting to push to queue from '${CURRENT_BRANCH}',"
    echo -e "the queue is only support from branch '${MAIN_BRANCH}' \033[0m"
    exit 1
fi

TIMESTAMP=`date +%s`
PENDING_BRANCH=${MAIN_BRANCH}-pending-${TIMESTAMP}

# attempt to restore master if someone hits ctrl+c
trap ctrl_c INT
function ctrl_c() {
    git checkout ${MAIN_BRANCH}
}

if [[ ! -z $* ]]
then
    echo
    echo -e "\033[1;34mCommitting changes... \033[0m"
    git commit "$*"
fi

echo
echo -e "\033[1;34mPulling 'origin/${MAIN_BRANCH}' into local branch... \033[0m"
git pull --rebase --autostash

if [[ -z `git cherry origin/${MAIN_BRANCH}` ]]
then
    echo
    echo "Your branch is up-to-date with 'origin/${MAIN_BRANCH}'."
    echo

    exit 0
fi


echo
echo -e "\033[1;34mCreating new pending branch... \033[0m"
git checkout -b ${PENDING_BRANCH}

echo
echo -e "\033[1;34mPushing changes... \033[0m"
git push --set-upstream origin ${PENDING_BRANCH}

echo
echo -e "\033[1;34mReturning to '${MAIN_BRANCH}'... \033[0m"
git checkout ${MAIN_BRANCH}

echo
echo -e "\033[1;34mCleaning up local branch... \033[0m"
git branch -d ${PENDING_BRANCH}

echo
echo -e "\033[1;34mSuccess! Your changes have been pushed to 'origin/${PENDING_BRANCH}' \033[0m"
